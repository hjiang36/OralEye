from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class CameraAutofocusPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, autofocus=None):  # noqa: E501
        """CameraAutofocusPostRequest - a model defined in OpenAPI

        :param autofocus: The autofocus of this CameraAutofocusPostRequest.  # noqa: E501
        :type autofocus: str
        """
        self.openapi_types = {
            'autofocus': str
        }

        self.attribute_map = {
            'autofocus': 'autofocus'
        }

        self._autofocus = autofocus

    @classmethod
    def from_dict(cls, dikt) -> 'CameraAutofocusPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _camera_autofocus_post_request of this CameraAutofocusPostRequest.  # noqa: E501
        :rtype: CameraAutofocusPostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def autofocus(self) -> str:
        """Gets the autofocus of this CameraAutofocusPostRequest.


        :return: The autofocus of this CameraAutofocusPostRequest.
        :rtype: str
        """
        return self._autofocus

    @autofocus.setter
    def autofocus(self, autofocus: str):
        """Sets the autofocus of this CameraAutofocusPostRequest.


        :param autofocus: The autofocus of this CameraAutofocusPostRequest.
        :type autofocus: str
        """
        allowed_values = ["on", "off"]  # noqa: E501
        if autofocus not in allowed_values:
            raise ValueError(
                "Invalid value for `autofocus` ({0}), must be one of {1}"
                .format(autofocus, allowed_values)
            )

        self._autofocus = autofocus
